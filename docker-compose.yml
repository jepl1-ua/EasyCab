services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    profiles:
      - central
    networks:
      easycab:
        aliases:
          - zookeeper

  kafka:
    image: confluentinc/cp-kafka:latest
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"   # Para comunicación interna
      - "29092:29092" # Para acceso externo
    profiles:
      - central
    networks:
      easycab:
        aliases:
          - kafka

  central:
    build:
      context: ./central
    # Si ENV_FILE no está definido, por defecto usará .env.distributed
    env_file:
      - ${ENV_FILE:-.env.distributed}
    ports:
      - "${CENTRAL_PORT:-8443}:${CENTRAL_PORT:-8443}"
    depends_on:
      - kafka
    networks:
      - easycab
    volumes:
      - "./logs:/app/logs"
    profiles:
      - central

  registry:
    build:
      context: ./registry
    env_file:
      - ${ENV_FILE:-.env.distributed}
    ports:
      - "${REGISTRY_PORT:-5000}:${REGISTRY_PORT:-5000}"
    networks:
      - easycab
    profiles:
      - central

  taxi:
    build:
      context: ./taxi
    env_file:
      - ${ENV_FILE:-.env.distributed}
    networks:
      - easycab
    profiles:
      - taxi

  customer:
    build:
      context: ./customer
    env_file:
      - ${ENV_FILE:-.env.distributed}
    networks:
      - easycab
    profiles:
      - customer

  sensor:
    build:
      context: ./sensor
    env_file:
      - ${ENV_FILE:-.env.distributed}
    networks:
      - easycab
    profiles:
      - sensor

  front:
    build:
      context: ./front
    env_file:
      - ${ENV_FILE:-.env.distributed}
    ports:
      - "3000:3000"
    networks:
      - easycab
    profiles:
      - front

  ctc:
    build:
      context: ./ctc
    env_file:
      - ${ENV_FILE:-.env.distributed}
    environment:
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
    ports:
      - "${CTC_PORT:-8080}:${CTC_PORT:-8080}"
    networks:
      - easycab
    profiles:
      - ctc

networks:
  easycab:
    driver: bridge

volumes:
  logs:
    driver: local
